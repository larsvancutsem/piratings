% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimize_pi_ratings.R
\name{optimize_pi_ratings}
\alias{optimize_pi_ratings}
\title{Optimize Pi Ratings}
\usage{
optimize_pi_ratings(teams, outcomes, lambda_in, gamma_in, b_in, c_in)
}
\arguments{
\item{teams}{an (n x 2) character matrix,
contains unique names for the respective home and away teams in n
subsequent matches}

\item{outcomes}{an (n x 2) numeric matrix,
contains the points that the respective home and away teams scored in n
subsequent matches}

\item{lambda_in}{a numerical vector, learning rate values to consider in
the grid optimization, default value: seq(0, 0.1, 0.005)}

\item{gamma_in}{a numerical vector, learning rate values to consider in
the grid optimization, default value: seq(0, 1, 0.05)}

\item{b_in}{a constant, logarithmic base, default value: 10}

\item{c_in}{a constant, default value: 3}
}
\value{
a dataframe with the results of the grid optimization,
the average squared error for every combination of learning rates
lambda and gamma specified in the parameter vectors
# @export
================================================================================
check requirements for calculation
================================================================================
================================================================================
create local variables and perform grid optimization
================================================================================
lambda_seq_l:      length of the sequence of lambdas taken into consideration
                   for the grid optimization

gamma_seq_l:       length of the sequence of gammas taken into consideration
                   for the grid optimization

avg_sq_e:          numerical matrix that stores the mean squared error
                   the pi ratings with the prespecified choice set
                   of parameters

current_lambda:    the selected lambda to perform the specific test run with

current_gamma:     the selected gamma to perform the specific test run with

result:            squared error result of the pi ratings for the test run
                   with specified parameter settings
}
\description{
This function performs grid optimization on a prespecified set
of parameters to find the optimal learning rates for calculating
the pi ratings for sport teams in competitive matches
for a set of teams in their respective set of sport matches.
The pi rating system was developed by Constantinou and
Fenton in their research paper 'Determining the level of
ability of football teams by dynamic ratings based on the relative
discrepancies in scores between adversaries'

source: http://www.constantinou.info/downloads/papers/pi-ratings.pdf
}
